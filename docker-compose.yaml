services:
  # Go API Server
  backend:
    build:
      context: ./backend
      dockerfile: api.Dockerfile
    container_name: ${PROJECT_NAME}-backend
    network_mode: "host"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=${BACKEND_PORT}
      - ENVIRONMENT=${ENVIRONMENT}
    restart: unless-stopped

  # Go Worker
  worker:
    build:
      context: ./backend
      dockerfile: worker.Dockerfile
    container_name: ${PROJECT_NAME}-worker
    network_mode: "host"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - ENVIRONMENT=${ENVIRONMENT}
    depends_on:
      - backend
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-frontend
    network_mode: "host"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped