networks:
  app_network:
    driver: bridge

services:
  # Go API Server
  backend:
    build:
      context: ./backend
      dockerfile: api.Dockerfile
    image: ${GITEA_REGISTRY_URL}/${PROJECT_NAME}/backend:${IMAGE_TAG:-latest}
    container_name: ${PROJECT_NAME}-backend
    platform: linux/amd64 
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - app_network
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=${BACKEND_PORT}
      - ENVIRONMENT=${ENVIRONMENT}
      - JWT_SECRET=${JWT_SECRET}
    restart: unless-stopped

  # Go Worker
  worker:
    build:
      context: ./backend
      dockerfile: worker.Dockerfile
    image: ${GITEA_REGISTRY_URL}/${PROJECT_NAME}/worker:${IMAGE_TAG:-latest}
    container_name: ${PROJECT_NAME}-worker
    platform: linux/amd64 
    networks:
      - app_network
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - ENVIRONMENT=${ENVIRONMENT}
      - OLLAMA_HOST=${OLLAMA_HOST}
    depends_on:
      - backend
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${GITEA_REGISTRY_URL}/${PROJECT_NAME}/frontend:${IMAGE_TAG:-latest}
    container_name: ${PROJECT_NAME}-frontend
    platform: linux/amd64
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - app_network
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    restart: unless-stopped